name: Hotel-Plan-Test-Workflow

run-name: HP ${{ github.event.inputs.scope || github.event.client_payload.scope || inputs.scope }} Test Run Build ${{github.run_number}} - ${{ github.event.inputs.environment || github.event.client_payload.environment || inputs.environment }}

on:
  workflow_call:
    inputs:
      logLevel:
        description: 'Log Level'
        required: true
        type: string
      environment:
        description: 'Environment'
        required: true
        type: string
      scope:
        description: 'Test Scope'
        required: true
        type: string

  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log Level'
        required: true
        default: 'INFO'
        type: choice
        options:
        - INFO
        - DEBUG
        - TRACE
      environment:
        description: 'Environment'
        required: true
        default: 'qa'
        type: choice
        options:
        - qa
        - stg
        - prod
      scope:
        description: 'Test Scope'
        required: true
        default: 'Smoke'
        type: choice
        options:
        - Smoke
        - Regression
        - Migration

  repository_dispatch:
    types: [deploy]

jobs:
  HP_Test_Run:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Set environment variable
      run: echo "ENV=${{ github.event.inputs.environment || github.event.client_payload.environment || inputs.environment }}" >> $GITHUB_ENV

    - name: Run Playwright tests
      env:
        ECMS_USERNAME: ${{ secrets.ECMS_USERNAME_QA }}
        ECMS_PASSWORD: ${{ secrets.ECMS_PASSWORD_QA }}
      run: |
        echo "ECMS_USERNAME=${{ secrets.ECMS_USERNAME_QA }}"
        echo "ECMS_PASSWORD=${{ secrets.ECMS_PASSWORD_QA }}"
        if [ "${{ github.event.inputs.environment || github.event.client_payload.environment || inputs.environment }}" == "qa" ]; then
          export ECMS_USERNAME=${{ secrets.ECMS_USERNAME_QA }}
          export ECMS_PASSWORD=${{ secrets.ECMS_PASSWORD_QA }}
        elif [ "${{ github.event.inputs.environment || github.event.client_payload.environment || inputs.environment }}" == "stg" ]; then
          export ECMS_USERNAME=${{ secrets.ECMS_USERNAME_STG }}
          export ECMS_PASSWORD=${{ secrets.ECMS_PASSWORD_STG }}
        fi
        
        if [ "${{ github.event.inputs.scope || github.event.client_payload.scope || inputs.scope }}" == "Smoke" ]; then
          npx playwright test --grep /@smoke/ --project=Chromium
        elif [ "${{ github.event.inputs.scope || github.event.client_payload.scope || inputs.scope }}" == "Regression" ]; then
          npx playwright test --grep /@regression/ --project=Chromium
        elif [ "${{ github.event.inputs.scope || github.event.client_payload.scope || inputs.scope }}" == "Migration" ]; then
          npx playwright test --grep /@migration/ --project=Chromium
        fi

    - name: Test Report Generation
      uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: HP_${{ github.event.inputs.scope || github.event.client_payload.scope || inputs.scope }}_Test_Results_${{github.run_number}} - ${{ github.event.inputs.environment || github.event.client_payload.environment || inputs.environment }}
        path: test-results/*